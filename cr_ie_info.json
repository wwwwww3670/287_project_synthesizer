{
	"system" : {
		"platform" : "windows64",
		"os_name" : "Windows 10",
		"os_version" : "10.0"
	},
	"error" : {
		"executable" : "quartus_map",
		"comment" : "not_applicable",
		"error_message" : "Access Violation at 0X00007FFBAF89E048",
		"source_file" : "unknown",
		"line" : "0",
		"stack_trace" : "\t0x7ffbaf89e047: synth_vrfx + 0x20e047 (?AssignPartial@VhdlIdRef@@UEAAXPEAVVhdlValue@@PEAVVhdlConstraint@@00PEAVNet@@PEBVArray@@IPEAVVhdlDataFlow@@@Z + 0xc17)\n\t0x7ffbaf89d152: synth_vrfx + 0x20d152 (?Assign@VhdlIdRef@@UEAAXPEAVVhdlValue@@PEAVVhdlDataFlow@@PEAVArray@@@Z + 0x2f2)\n\t0x7ffbaf89d27e: synth_vrfx + 0x20d27e (?Assign@VhdlIndexedName@@UEAAXPEAVVhdlValue@@PEAVVhdlDataFlow@@PEAVArray@@@Z + 0xfe)\n\t0x7ffbaf8b883b: synth_vrfx + 0x22883b (?Execute@VhdlSignalAssignmentStatement@@UEAAXPEAVVhdlDataFlow@@PEAVVhdlBlockConfiguration@@@Z + 0x1ab)\n\t0x7ffbaf8b6ad2: synth_vrfx + 0x226ad2 (?Execute@VhdlIfStatement@@UEAAXPEAVVhdlDataFlow@@PEAVVhdlBlockConfiguration@@@Z + 0xa32)\n\t0x7ffbaf8b742f: synth_vrfx + 0x22742f (?Execute@VhdlProcessStatement@@UEAAXPEAVVhdlDataFlow@@PEAVVhdlBlockConfiguration@@@Z + 0x1ff)\n\t0x7ffbaf82742f: synth_vrfx + 0x19742f (?Elaborate@VhdlArchitectureBody@@UEAAPEAVNetlist@@PEAVVhdlBlockConfiguration@@@Z + 0x10f)\n\t0x7ffbaf823468: synth_vrfx + 0x193468 (?CoreElaborate@VhdlEntityDecl@@QEAAPEAVNetlist@@PEAVVhdlSecondaryUnit@@PEBDPEAVVhdlBlockConfiguration@@@Z + 0x488)\n\t0x7ffbaf827c3d: synth_vrfx + 0x197c3d (?Elaborate@VhdlEntityDecl@@UEAAPEAVNetlist@@PEBDPEAVArray@@PEAVMap@@PEAVVhdlBlockConfiguration@@@Z + 0x3ad)\n\t0x7ffbaf701cf8: synth_vrfx + 0x71cf8 (?elaborate@VRFX_VERIFIC_VHDL_ELABORATOR@@UEAAPEAVNetlist@@PEAVBASEX_ELABORATE_INFO@@@Z + 0x218)\n\t0x7ffbaf6f9c44: synth_vrfx + 0x69c44 (?elaborate@VRFX_ELABORATOR@@UEAAPEAVHDB_COMPONENT_SCHEMA@@PEAVBASEX_ELABORATE_INFO@@@Z + 0x164)\n\t0x7ffbb3c6a8ef: synth_sgn + 0xda8ef (?elaborate@SGN_FN_LIB@@AEBAXPEAVBASEX_ELAB_INFO_CORE@@@Z + 0x24f)\n\t0x7ffbb3c7351f: synth_sgn + 0xe351f (?start_vrf_flow@SGN_FN_LIB@@AEBAXXZ + 0xf)\n\t0x7ffbb3c71afb: synth_sgn + 0xe1afb (?start@SGN_FN_LIB@@QEAAXPEAVSGN_WRAPPER_INFO@@@Z + 0xa1b)\n\t0x7ffbb3c5294a: synth_sgn + 0xc294a (?single_module_extraction@SGN_EXTRACTOR@@AEBAKPEAVHDB_INSTANCE_NAME@@PEAVHDB_ENTITY@@PEAVSGN_WRAPPER_INFO@@@Z + 0x15a)\n\t0x7ffbb3c47524: synth_sgn + 0xb7524 (?recursive_extraction@SGN_EXTRACTOR@@AEAAKPEAVHDB_INSTANCE_NAME@@PEAVSGN_WRAPPER_INFO@@PEBD@Z + 0x204)\n\t0x7ffbb3c40913: synth_sgn + 0xb0913 (?extract@SGN_EXTRACTOR@@QEAAXXZ + 0x1d3)\n\t0x7ffbb3ba309e: synth_sgn + 0x1309e (?sgn_qic_full@@YA?AW4SGN_STATE_ENUM@@PEAVCMP_FACADE@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEAV?$vector@NV?$allocator@N@std@@@4@@Z + 0x19e)\n\t0x7ff783004391: quartus_map + 0x4391 (?qsyn_execute_sgn@@YA?AW4SGN_STATE_ENUM@@PEAVCMP_FACADE@@AEAV?$vector@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@V?$allocator@V?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@@2@@std@@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@4@PEAVTHR_NAMED_PIPE@@3@Z + 0x131)\n\t0x7ff783013fac: quartus_map + 0x13fac (?execute_core@QSYN_FRAMEWORK@@AEAA_NPEAVTHR_NAMED_PIPE@@0@Z + 0x12c)\n\t0x7ff783013ab6: quartus_map + 0x13ab6 (?execute@QSYN_FRAMEWORK@@UEAA_NXZ + 0x496)\n\t0x7ffb9d2612bc: comp_qexe + 0x112bc (qexe_do_normal + 0x1ec)\n\t0x7ffb9d266142: comp_qexe + 0x16142 (qexe_run + 0x432)\n\t0x7ffb9d266e51: comp_qexe + 0x16e51 (?qexe_standard_main@@YAHPEAVQEXE_FRAMEWORK@@PEAPEBUQEXE_OPTION_DEFINITION@@HPEAPEBD@Z + 0xc1)\n\t0x7ff78301b06b: quartus_map + 0x1b06b (?qsyn_main@@YAHHPEAPEBD@Z + 0x51b)\n\t0x7ffbd40b3328: CCL_MSG + 0x13328 (?msg_main_thread@@YAPEAXPEAX@Z + 0x18)\n\t0x7ffbd40b4b0e: CCL_MSG + 0x14b0e (?msg_thread_wrapper@@YAPEAXP6APEAXPEAX@Z0@Z + 0x6e)\n\t0x7ffbd4045b00: ccl_mem + 0x15b00 (?mem_thread_wrapper@@YAPEAXP6APEAXPEAX@Z0@Z + 0x70)\n\t0x7ffbd40b2a11: CCL_MSG + 0x12a11 (?msg_exe_main@@YAHHPEAPEBDP6AHH0@Z@Z + 0xa1)\n\t0x7ff783029862: quartus_map + 0x29862 (__tmainCRTStartup + 0x10e)\n\t0x7ffbea1c3033: KERNEL32 + 0x13033 (BaseThreadInitThunk + 0x13)\n\t0x7ffbea801460: ntdll + 0x71460 (RtlUserThreadStart + 0x20)\n",
		"subsystem" : "unknown"
	},
	"quartus" : {
		"quartus_bits" : "64",
		"version" : "16.1.0",
		"build" : "196",
		"edition" : "Lite Edition"
	}
}